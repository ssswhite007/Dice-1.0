/******************************************************************************
START Glitch hello-app default styles

The styles in this section do some minimal CSS resets, set default fonts and 
colors, and handle the layout for our footer and "Remix on Glitch" button. If
you're new to CSS they may seem a little complicated, but you can scroll down
to this section's matching END comment to see page-specific styles.
******************************************************************************/


/* 
  The style rules specify elements by type and by attributes such as class and ID
  Each section indicates an element or elements, then lists the style properties to apply
  See if you can cross-reference the rules in this file with the elements in index.html
*/

/* Our default values set as CSS variables */
:root {
  --color-bg: #69F7BE;
  --color-text-main: #000000;
  --color-primary: #FFFF00;
  --wrapper-height: 87vh;
  --image-max-width: 300px;
  --image-margin: 0rem;
  --font-family: "HK Grotesk";
  --font-family-header: "HK Grotesk";
}

/* Basic page style resets */
* {
  box-sizing: border-box;
}
[hidden] {
  display: none !important;
}

body {
  font-family: Arial;
  background:black;
  padding:0px;
  margin:0px;
  align-items: flex-end; /* Aligns the tray to the bottom of the page */    
  justify-content: center; /* Centers content horizontally */
  overflow:clip;
}


#expression{
  text-shadow: 0px 0px 3px white;
  color:white;
  position:absolute;
  left:0%;
  top:0%;
  z-index:10;
  FFtransform: translate(-50%, -5%);
  display:block;
  padding:3px;
  opacity:.5;
    pointer-events:none;
}


.dice-tray {
    position:absolute;
    bottom:0px;
    z-index:5;
    width: 100%;
    display: flex;
    justify-content: space-around; /* Distributes the spots evenly */
    padding: 10px 0;
    background-color: rgb(255 255 255 / 0%); /* Semi-transparent background */
    pointer-events:none;
}

.dice-spot {
    width: 100pt; /* Width and height are equal to make squares */
    height: 100pt; /* Same as width to ensure square spots */

    border: 2px dotted #000; /* Dotted outline */
    margin: 0 5px;
    background-color: #00000000; /* Transparent background */
    pointer-events:none;
}


#popup-container {
  display: flex;
  justify-content: center; /* Centers horizontally */
  align-items: center;     /* Centers vertically */
  line-height: 7vw; /* Centers text vertically */
  font-size:4vw;
  height: 100%;
  width:100%;
  cursor:pointer;
  color:white;
  background:rgba(0,0,0,.25);
  position:absolute;
  pointer-events: none;
  overflow:clip;
}

#popup{
  width: 50%;
  height: 40%;
  background-color: #00000000;
  text-align: center;
  cursor:pointer;
  color:white;
  background:rgba(0,0,0,.0);
  pointer-events: none;
  user-select:none;
}

/* Fade-in and fade-out animations */
.fade-in {
  animation: fadeIn 0.5s forwards;
}

.fade-out {
  animation: fadeOut 0.5s forwards;
}

@keyframes fadeIn {
  from { opacity: 0; visibility:hidden;}
  to   { opacity: 1; visibility:visible; }
}

@keyframes fadeOut {
  from { opacity: 1; visibility:visible;}
  to   { opacity: 0; visibility:hidden;}
}


.outputCanvas, video { 
  width: 150px; 
  height: 100px; 
  margin: 5px; 
  border: 1px solid black; 
  position:absolute; 
}
.outputCanvas { 
  z-index:10;
  pointer-events:none;
}
#keys { 
  margin-top: 20px; 
  font-family: Arial, sans-serif; 
  position:absolute; 
  color:white; 
  pointer-events:none;
}
.remoteVideos {
  display:hidden;
  position:absolute;
  top:50%;
  pointer-events:none;
} 

#localVideo {
  pointer-events:none;
}

table {
  width: 100%;
  border-collapse: collapse;
}
table, th, td {
  border: 1px solid #000;
}
th, td {
  padding: 5px;
  text-align: center;
}
input[type="radio"], input[type="checkbox"] {
  margin: 0 auto;
  display: block;
}
input[type="number"] {
  width: 50px;
  text-align: center;
}
button {
  padding: 5px 10px;
}